name: Spring Boot Kafka CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    name: Build All Spring Boot Microservices
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - base-domains/base-domains
          - email-service/email-service
          - order-service/order-service
          - stock-service/stock-service

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build ${{ matrix.service }}
        working-directory: ./${{ matrix.service }}
        run: mvn clean package -DskipTests

      - name: Upload Artifact for ${{ matrix.service }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service }}-jar
          path: ./${{ matrix.service }}/target/*.jar



#name: Spring Boot Kafka CI/CD
#
#
#on:
#  push:
#    branches: [ "master" ]
#    paths:
#      - 'base-domains/base-domains/**'
#      - 'email-service/email-service/**'
#      - 'order-service/order-service/**'
#      - 'stock-service/stock-service/**'
#  pull_request:
#    branches: [ "master" ]
#
#jobs:
#  build:
#    name: Build All Spring Boot Microservices
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        service:
#          - base-domains/base-domains
#          - email-service/email-service
#          - order-service/order-service
#          - stock-service/stock-service
#
#    steps:
#      # Step 1: Checkout the repository
#      - name: Checkout Code
#        uses: actions/checkout@v4
#
#      # Step 2: Set up Java 17
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      # Step 3: Build each microservice
#      - name: Build ${{ matrix.service }}
#        working-directory: ./${{ matrix.service }}
#        run: mvn clean package -DskipTests
#
#      # Step 4: Upload the JAR artifact
#      - name: Upload Artifact for ${{ matrix.service }}
#        uses: actions/upload-artifact@v4
#        with:
#          name: ${{ matrix.service }}-jar
#          path: ./${{ matrix.service }}/target/*.jar
#
